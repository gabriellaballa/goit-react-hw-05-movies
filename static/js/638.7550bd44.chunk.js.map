{"version":3,"file":"static/js/638.7550bd44.chunk.js","mappings":"sPACA,EAA6B,2B,SCsD7B,EAjDe,WACb,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA0BtB,OAxBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMrB,OANqBF,EAAAC,KAAA,EAEN,mCACVJ,EAAQ,sCAAAM,OAAyCxB,EAAO,YACxDmB,EAAS,CACbM,QAHc,oCAIfJ,EAAAE,KAAA,EAEsBG,EAAAA,EAAAA,IAAUR,EAAU,CAAEC,OAAAA,IAAU,KAAD,GAAhDC,EAAQC,EAAAM,MACDC,KAAKC,QAAQC,OAAS,EACjCvB,EAAWa,EAASQ,KAAKC,SAEzBlB,EAAS,iDACVU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEDW,QAAQtB,MAAM,qCAAsCW,EAAAU,GAAME,SAC1DtB,EAAS,kDAAkD,yBAAAU,EAAAa,OAAA,GAAAjB,EAAA,mBAE9D,kBAlBsB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAoBvBvB,GACF,GAAG,CAACb,KAGFqC,EAAAA,EAAAA,KAAA,OAAAC,SACG5B,GACC2B,EAAAA,EAAAA,KAAA,KAAAC,SAAI5B,KAEJ2B,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAD,UACED,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAeH,SAC3BhC,EAAQoC,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACEM,EAAAA,EAAAA,MAAA,KAAAN,SAAA,CAAG,WAASK,EAAOE,WACnBR,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,EAAOG,YAFJH,EAAOI,GAGX,SAOnB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Review/Review.module.css?3727","components/Review/Review.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Review_reviewList__H0IS2\"};","// Review.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport css from './Review.module.css';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const API_KEY = '34696298a8c2c13903b901c47d5a708f';\n        const endpoint = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n        const params = {\n          api_key: API_KEY,\n        };\n\n        const response = await axios.get(endpoint, { params });\n        if (response.data.results.length > 0) {\n          setReviews(response.data.results);\n        } else {\n          setError('There are no reviews available for this film.');\n        }\n      } catch (error) {\n        console.error('Error retrieving data for reviews:', error.message);\n        setError('Error loading reviews. Please try again later.');\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <ul className={css.reviewList}>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","params","response","_context","prev","next","concat","api_key","axios","sent","data","results","length","t0","console","message","stop","apply","arguments","_jsx","children","_Fragment","className","css","map","review","_jsxs","author","content","id"],"sourceRoot":""}