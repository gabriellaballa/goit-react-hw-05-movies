{"version":3,"file":"static/js/888.d6c98630.chunk.js","mappings":"4PACA,EAA2B,uB,SC8C3B,EAzCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAqBpB,OAnBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMlB,OANkBF,EAAAC,KAAA,EAEH,mCACVJ,EAAQ,sCAAAM,OAAyCpB,EAAO,YACxDe,EAAS,CACbM,QAHc,oCAIfJ,EAAAE,KAAA,EAEsBG,EAAAA,EAAAA,IAAUR,EAAU,CAAEC,OAAAA,IAAU,KAAD,EAAhDC,EAAQC,EAAAM,KACdhB,EAAQS,EAASQ,KAAKlB,MAAMW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAE5BS,QAAQC,MAAM,QAASV,EAAAQ,GAAMG,SAAS,yBAAAX,EAAAY,OAAA,GAAAhB,EAAA,mBAEzC,kBAbmB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAepBtB,GACF,GAAG,CAACT,KAGFgC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAaF,SACzB3B,EAAK8B,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEO,IAAG,oDAAAnB,OAAsDiB,EAAMG,cAC/DC,IAAKJ,EAAMK,QAEbV,EAAAA,EAAAA,KAAA,KAAAC,SAAII,EAAMK,QACVJ,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,cAAYI,EAAMM,eANdN,EAAMO,GAOV,OAKf,C,+JC5CA,EAA4B,gCAA5B,EAAsE,8BAAtE,EAAgH,gC,SCyEhH,EAlEqB,WACnB,IAAQ5C,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C2C,EAAYzC,EAAA,GAAE0C,EAAe1C,EAAA,GAwBpC,OAtBAI,EAAAA,EAAAA,YAAU,WACR,IAAMuC,EAAiB,eAAArC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQrB,OARqBF,EAAAC,KAAA,EAEN,mCAEVJ,EAAQ,sCAAAM,OAAyCpB,GAEjDe,EAAS,CACbM,QALc,oCAMfJ,EAAAE,KAAA,EAEsBG,EAAAA,EAAAA,IAAUR,EAAU,CAAEC,OAAAA,IAAU,KAAD,EAAhDC,EAAQC,EAAAM,KAEduB,EAAgB9B,EAASQ,MAAMP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAE/BS,QAAQC,MAAM,QAASV,EAAAQ,GAAMG,SAAS,yBAAAX,EAAAY,OAAA,GAAAhB,EAAA,mBAEzC,kBAhBsB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAkBvBgB,GACF,GAAG,CAAC/C,IAEC6C,GAKHP,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAcF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKY,EAAaG,SAClBV,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAYF,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OACEO,IAAG,sDAAAnB,OAAwDyB,EAAaI,aACxER,IAAKI,EAAaG,SAEpBV,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CACG,KACDD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,WAAa,IAAEY,EAAaK,iBAEpCZ,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CACG,KACDD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,cAAgB,IAAEY,EAAaM,aAEvCb,EAAAA,EAAAA,MAAA,KAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,aACLY,EAAaO,OAAOhB,KAAI,SAAAiB,GAAK,OAAIA,EAAMX,IAAI,IAAEY,KAAK,gBAIzDhB,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAcF,SAAA,EAC5BD,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACC,GAAE,WAAApC,OAAapB,EAAO,SAAQiC,SAAC,UACrCD,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACC,GAAE,WAAApC,OAAapB,EAAO,YAAWiC,SAAC,eAG1CK,EAAAA,EAAAA,MAACmB,EAAAA,GAAM,CAAAxB,SAAA,EACLD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAAS5B,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,OACjC7B,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAAS5B,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,aAjCpC9B,EAAAA,EAAAA,KAAA,OAAAC,SAAK,cAqChB,C,sICvEA,EAA6B,2B,SCsD7B,EAjDe,WACb,IAAQjC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC6D,EAAO3D,EAAA,GAAE4D,EAAU5D,EAAA,GAC1B6D,GAA0B9D,EAAAA,EAAAA,UAAS,MAAK+D,GAAA7D,EAAAA,EAAAA,GAAA4D,EAAA,GAAjCtC,EAAKuC,EAAA,GAAEC,EAAQD,EAAA,GA0BtB,OAxBA1D,EAAAA,EAAAA,YAAU,WACR,IAAM4D,EAAiB,eAAA1D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMrB,OANqBF,EAAAC,KAAA,EAEN,mCACVJ,EAAQ,sCAAAM,OAAyCpB,EAAO,YACxDe,EAAS,CACbM,QAHc,oCAIfJ,EAAAE,KAAA,EAEsBG,EAAAA,EAAAA,IAAUR,EAAU,CAAEC,OAAAA,IAAU,KAAD,GAAhDC,EAAQC,EAAAM,MACDC,KAAK6C,QAAQC,OAAS,EACjCN,EAAWhD,EAASQ,KAAK6C,SAEzBF,EAAS,iDACVlD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEDS,QAAQC,MAAM,qCAAsCV,EAAAQ,GAAMG,SAC1DuC,EAAS,kDAAkD,yBAAAlD,EAAAY,OAAA,GAAAhB,EAAA,mBAE9D,kBAlBsB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAoBvBqC,GACF,GAAG,CAACpE,KAGFgC,EAAAA,EAAAA,KAAA,OAAAC,SACGN,GACCK,EAAAA,EAAAA,KAAA,KAAAC,SAAIN,KAEJK,EAAAA,EAAAA,KAAAuC,EAAAA,SAAA,CAAAtC,UACED,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAeF,SAC3B8B,EAAQ3B,KAAI,SAAAoC,GAAM,OACjBlC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,WAASuC,EAAOC,WACnBzC,EAAAA,EAAAA,KAAA,KAAAC,SAAIuC,EAAOE,YAFJF,EAAO5B,GAGX,SAOnB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/Review/Review.module.css?3727","components/Review/Review.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","// Cast.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const API_KEY = '34696298a8c2c13903b901c47d5a708f';\n        const endpoint = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n        const params = {\n          api_key: API_KEY,\n        };\n\n        const response = await axios.get(endpoint, { params });\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error', error.message);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://www.themoviedb.org/t/p/w138_and_h175_face${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"details\":\"MovieDetails_details__tmd20\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\"};","// MovieDetails.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link, Routes, Route } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Review/Review';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const API_KEY = '34696298a8c2c13903b901c47d5a708f';\n\n        const endpoint = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n        const params = {\n          api_key: API_KEY,\n        };\n\n        const response = await axios.get(endpoint, { params });\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error', error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <h1>{movieDetails.title}</h1>\n      <div className={css.details}>\n        <img\n          src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n        />\n        <div>\n          <p>\n            {' '}\n            <span>Score:</span> {movieDetails.vote_average}\n          </p>\n          <p>\n            {' '}\n            <span>Overview:</span> {movieDetails.overview}\n          </p>\n          <p>\n            <span>Genres: </span>\n            {movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n      <nav className={css.movieInfo}>\n        <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        <Link to={`/movies/${movieId}/reviews`}>Review</Link>\n      </nav>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Review_reviewList__H0IS2\"};","// Review.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport css from './Review.module.css';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const API_KEY = '34696298a8c2c13903b901c47d5a708f';\n        const endpoint = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n        const params = {\n          api_key: API_KEY,\n        };\n\n        const response = await axios.get(endpoint, { params });\n        if (response.data.results.length > 0) {\n          setReviews(response.data.results);\n        } else {\n          setError('There are no reviews available for this film.');\n        }\n      } catch (error) {\n        console.error('Error retrieving data for reviews:', error.message);\n        setError('Error loading reviews. Please try again later.');\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <ul className={css.reviewList}>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","params","response","_context","prev","next","concat","api_key","axios","sent","data","t0","console","error","message","stop","apply","arguments","_jsx","children","className","css","map","actor","_jsxs","src","profile_path","alt","name","character","id","movieDetails","setMovieDetails","fetchMovieDetails","title","poster_path","vote_average","overview","genres","genre","join","Link","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","_useState3","_useState4","setError","fetchMovieReviews","results","length","_Fragment","review","author","content"],"sourceRoot":""}